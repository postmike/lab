name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
    
      - name: See initial environment
        run: |
          echo "******************** pwd *********************************"
          pwd
          echo "******************** ls *********************************"
          ls
          echo "*****************************************************"

      - name: Checkout
        uses: actions/checkout@v4

      - name: See environment after checkout
        run: |
          echo "******************** pwd *********************************"
          pwd
          echo "******************** ls *********************************"
          ls
          echo "*****************************************************"

      - name: Ceckout my notebooks from my private repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.OBSIDIAN_PERSONAL_ACCESS_TOKEN }}
          repository: "postmike/ObsidianVault"
          path: "ObsidianVault"
          sparse-checkout: |
            Projects/attachments/fmcw/scripts/radar_model/fmcw_calculator_v1.2.ipynb
            Projects/attachments/fmcw/scripts/chirp_vhdl_generator/chirp_table_generator_for_vhdl.ipynb
          sparse-checkout-cone-mode: false

      - name: Setup JupyterLite "content" folder
        run: |

          # Re-arrange default demo notebooks to move them from the root to a subfolder
          mkdir -p "./content/demo"
          mv "./content/javascript.ipynb" "./content/demo"
          mv "./content/p5.ipynb"         "./content/demo"
          mv "./content/python.ipynb"     "./content/demo"

          # Add private user notebooks
          mv "./ObsidianVault/Projects/attachments/fmcw/scripts/radar_model/fmcw_calculator_v1.2.ipynb" "./content"
          mv "./ObsidianVault/Projects/attachments/fmcw/scripts/chirp_vhdl_generator/chirp_table_generator_for_vhdl.ipynb" "./content"

          echo "******************** ls *********************************"
          ls
          echo "****************** ls -alR ./content ********************"
          ls -alR ./content
          echo "*****************************************************"


      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install the dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Build the JupyterLite site
        run: |
          cp README.md ./content
          jupyter lite build --contents "./content" --output-dir "./dist"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Show Directory Structure
        run: |
          echo "******************** pwd *********************************"
          pwd
          echo "********************* ls ********************************"
          ls
          echo "******************** ls ./dist *********************************"
          ls ./dist

      
      - name: Deploy to Cloudflare Pages
        # https://github.com/cloudflare/wrangler-action
        uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          preCommands: |
            echo "*** pre commands ***"
            
            ### # Make a copy of the website to modify it and to add the user notebooks
            ### cp -r "./dist" "./dist2"
            ### 
            ### # Re-arrange the website files
            ### 
            ### # Move default demo notebooks from root folder to "demo" subfolder
            ### mkdir -p "./dist2/api/contents/demo"
            ### # mv "./dist2/api/contents/all.json" "./dist2/api/contents/demo"
            ### 
            ### # Replace paths:
            ### #   from:       "path": "README.md",
            ### #     to:       "path": "demo/README.md",
            ### sed -i 's/\("path": "\)\(javascript.ipynb"\)/\1demo\/\2/' "./dist2/api/contents/all.json"
            ### sed -i 's/\("path": "\)\(p5.ipynb"\)/\1demo\/\2/'         "./dist2/api/contents/all.json"
            ### sed -i 's/\("path": "\)\(python.ipynb"\)/\1demo\/\2/'     "./dist2/api/contents/all.json"
            ### sed -i 's/\("path": "\)\(README.md"\)/\1demo\/\2/'        "./dist2/api/contents/all.json"
            ### 
            ### ls "./dist2/api/contents"
            ### cat "./dist2/api/contents/all.json"
            ### 
            ### # Add user notebooks to the root folder
            ### 
            ### # NOT DONE YET
            
            echo "*** end of pre commands ***"
          command: |
            pages project list
            pages deploy "./dist" --project-name "lab" --branch main
            pages deployment list --project-name "lab"

#  deploy:
#
#    needs: build
#
#    if: github.ref == 'refs/heads/main'
#
#    permissions:
#      pages: write
#      id-token: write
#
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v4
